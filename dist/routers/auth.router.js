"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.authRouter = void 0;
const express_1 = require("express");
const auth_controller_1 = require("../controllers/auth.controller");
const role_enum_1 = require("../enums/role.enum");
const auth_middleware_1 = require("../middlewares/auth.middleware");
const common_middleware_1 = require("../middlewares/common.middleware");
const user_middleware_1 = require("../middlewares/user.middleware");
const user_validator_1 = require("../validators/user.validator");
const router = (0, express_1.Router)();
router.post("/admin/sign-up", common_middleware_1.commonMiddleware.isBodyValid(user_validator_1.UserValidator.create), auth_controller_1.authController.signUpAdmin);
router.post("/admin/sign-in", common_middleware_1.commonMiddleware.isBodyValid(user_validator_1.UserValidator.login), auth_controller_1.authController.signInAdmin);
router.post("/sign-up", common_middleware_1.commonMiddleware.isBodyValid(user_validator_1.UserValidator.create), auth_controller_1.authController.signUp);
router.post("/sign-in", common_middleware_1.commonMiddleware.isBodyValid(user_validator_1.UserValidator.login), auth_controller_1.authController.signIn);
router.post("/refresh", auth_middleware_1.authMiddleware.checkRefreshToken(role_enum_1.ERole.USER), auth_controller_1.authController.refresh);
router.post("/forgot-password", common_middleware_1.commonMiddleware.isBodyValid(user_validator_1.UserValidator.forgotPassword), user_middleware_1.userMiddleware.isUserExist("email"), auth_controller_1.authController.forgotPassword);
router.put("/forgot-password/:token", common_middleware_1.commonMiddleware.isBodyValid(user_validator_1.UserValidator.newPassword), auth_controller_1.authController.setForgotPassword);
exports.authRouter = router;
